/*
Inserts the ALPS Target Grade and Target Points into Enrolment UserDefined14 and UserDefined15
Ensure these fields do not contain existing data and, if they do, switch to using other vacant fields
*/

CREATE PROCEDURE [dbo].[SPR_ALP_UpdateTargetGrades]
AS
BEGIN
	SET NOCOUNT ON;

	DROP TABLE IF EXISTS #EarliestStart
	SELECT
		SD.StudentDetailID,
		EarliestStartDate = MIN ( ENR.StartDate )
		INTO #EarliestStart
	FROM ProSolution.dbo.StudentDetail SD
	INNER JOIN ProSolution.dbo.Enrolment ENR
		ON ENR.StudentDetailID = SD.StudentDetailID
	WHERE
		SD.AcademicYearID = (
			SELECT
				CFG.Value
			FROM Config CFG
			WHERE
				CFG.ConfigID = 'PMO_AcademicYearID'
		)
		AND ENR.CompletionStatusID IN ( '1', '2', '3', '4' )
		AND ENR.IncludeInReturn = 1
	GROUP BY
		SD.StudentDetailID


	DROP TABLE IF EXISTS #Rankings
	SELECT
		GRA.Subject,
		GRA.TargetGrade,
		GradeRank = ROW_NUMBER () OVER ( PARTITION BY GRA.Subject ORDER BY GRA.MaxPoints )
		INTO #Rankings
	FROM (
		SELECT
			TAR.Subject,
			TAR.TargetGrade,
			MaxPoints = MAX ( TAR.MaxPoints )
		FROM ALPS_TargetSetting TAR
		GROUP BY
			TAR.Subject,
			TAR.TargetGrade
	) GRA


	DROP TABLE IF EXISTS #RankingsGCSE
	SELECT
		GRA.Grade,
		GradeRank = ROW_NUMBER () OVER ( ORDER BY GRA.MaxPoints )
		INTO #RankingsGCSE
	FROM (
		SELECT
			GP.Grade,
			MaxPoints = MAX ( GP.Points )
		FROM GradePoints GP
		WHERE
			GP.QualType = 'G'
			AND GP.Grade BETWEEN '1' AND '9'
		GROUP BY
			GP.Grade
	) GRA

	DROP TABLE IF EXISTS #QOEs
	SELECT
		QOE.StudentDetailID,
		EngGCSEGrade = MAX ( CASE WHEN QOE.Subject = 'EngGCSE' THEN QOE.Grade ELSE NULL END ),
		EngGCSEPoints = MAX ( CASE WHEN QOE.Subject = 'EngGCSE' THEN QOE.GradePoints ELSE NULL END ),
		EngGCSEDate = MAX ( CASE WHEN QOE.Subject = 'EngGCSE' THEN QOE.DateAwarded ELSE NULL END ),
		MathsGCSEGrade = MAX ( CASE WHEN QOE.Subject = 'MathsGCSE' THEN QOE.Grade ELSE NULL END ),
		MathsGCSEPoints = MAX ( CASE WHEN QOE.Subject = 'MathsGCSE' THEN QOE.GradePoints ELSE NULL END ),
		MathsGCSEDate = MAX ( CASE WHEN QOE.Subject = 'MathsGCSE' THEN QOE.DateAwarded ELSE NULL END )
		INTO #QOEs
	FROM (
		SELECT
			QOE.StudentDetailID,
			QOE.DataSource,
			QOE.Subject,
			QOE.AimCode,
			QOE.AimTitle,
			QOE.AimLevel,
			QOE.Grade,
			QOE.GradePoints,
			QOE.DateAwarded,
			RowNum = 
				ROW_NUMBER () OVER (
					PARTITION BY
						QOE.StudentDetailID,
						QOE.Subject
					ORDER BY
						QOE.GradePoints DESC,
						CASE WHEN QOE.Grade = 'FL' THEN 2 ELSE 1 END, --Ensure fails are last
						CASE WHEN QOE.AimLevel = 'E' THEN '0' ELSE QOE.AimLevel END DESC,
						CASE WHEN QOE.Grade BETWEEN '1' AND '9' THEN 1 ELSE 2 END, --Prioritise reformed grades
						CASE WHEN LEN ( QOE.Grade ) > 1 AND QOE.Grade LIKE 'E%' THEN RIGHT ( QOE.Grade, 1 ) ELSE '4' END DESC, --Entry levels need to be in desc order
						QOE.Grade,
						CASE WHEN QOE.DataSource = 'COF' THEN 2 ELSE 1 END,
						QOE.DateAwarded DESC
				)
		FROM (

			SELECT
				StudentDetailID = SD.StudentDetailID,
				DataSource = 'PLR',
				Subject = 
					CASE 
						WHEN 
							(
								PLRD.QualificationTitle LIKE '%English%'
								OR AIM.LEARNING_AIM_TITLE LIKE '%English%'
							)
							AND (
								PLRD.QualificationTitle LIKE '%GCSE%'
								OR AIM.LEARNING_AIM_TITLE LIKE '%GCSE%'
								OR AIM.LEARNING_AIM_TYPE_CODE = '0003'
							)
							THEN 'EngGCSE'
						WHEN 
							(
								PLRD.QualificationTitle LIKE '%Math%'
								OR AIM.LEARNING_AIM_TITLE LIKE '%Math%'
							)
							AND (
								PLRD.QualificationTitle LIKE '%GCSE%'
								OR AIM.LEARNING_AIM_TITLE LIKE '%GCSE%'
								OR AIM.LEARNING_AIM_TYPE_CODE = '0003'
							)
							THEN 'MathsGCSE'
						ELSE 'X'
					END,
				AimCode = PLRD.SourceQualificationCode,
				AimTitle = PLRD.QualificationTitle,
				AimLevel = AIM.NOTIONAL_NVQ_LEVEL_CODE,
				Grade = PLRD.Grade,
				GradePoints = ALPS.Points,
				DateAwarded = PLRD.AwardDate
			FROM ProSolution.dbo.StudentDetail SD
			INNER JOIN ProSolution.dbo.PLRDownload PLR
				ON PLR.StudentID = SD.StudentID
			INNER JOIN ProSolution.dbo.PLRLearnerEventDownload PLRD
				ON PLRD.PLRDownloadID = PLR.PLRDownloadID
			LEFT JOIN ProSolution.dbo.Learning_Aim AIM
				ON AIM.LEARNING_AIM_REF = PLRD.SourceQualificationCode
			LEFT JOIN GradePoints ALPS
				ON ALPS.Grade = 
					CASE
						WHEN PLRD.Grade LIKE '%-%' THEN LEFT ( PLRD.Grade, 1 )
						ELSE PLRD.Grade
					END
				AND ALPS.QualType = 'G'
			WHERE
				SD.AcademicYearID = (
					SELECT
						CFG.Value
					FROM Config CFG
					WHERE
						CFG.ConfigID = 'PMO_AcademicYearID'
				)
				AND PLRD.AwardDate IS NOT NULL
				AND COALESCE ( PLRD.Grade, 'NONE' ) NOT IN ( '', 'NONE', 'X', 'Unclassified', '#Unclassified' )
				AND PLRD.SourceQualificationCode IS NOT NULL
				--AND SD.RefNo = 'CRE12007964'

			UNION ALL

			SELECT
				StudentDetailID = SD.StudentDetailID,
				DataSource = 'QOE',
				Subject = 
					CASE 
						WHEN COALESCE ( AIM.LEARNING_AIM_TITLE, QOEQ.Title, QOE.Subject ) LIKE '%English%'
						AND COALESCE ( AIM.LEARNING_AIM_TITLE, QOEQ.Title, QOE.Subject ) LIKE '%GCSE%'
							THEN 'EngGCSE'
						WHEN COALESCE ( AIM.LEARNING_AIM_TITLE, QOEQ.Title, QOE.Subject ) LIKE '%Math%'
						AND COALESCE ( AIM.LEARNING_AIM_TITLE, QOEQ.Title, QOE.Subject ) LIKE '%GCSE%'
							THEN 'MathsGCSE'
						ELSE 'X'
					END,
				AimCode = QOE.QualCode,
				AimTitle = COALESCE ( AIM.LEARNING_AIM_TITLE, QOEQ.Title, QOE.Subject ),
				AimLevel = AIM.NOTIONAL_NVQ_LEVEL_CODE,
				Grade = CAST ( RTRIM ( QOE.Grade ) AS VARCHAR(20) ),
				GradePoints = ALPS.Points,
				DateAwarded = COALESCE ( QOE.DateAwarded, '20' + LEFT ( SD.AcademicYearID, 2 ) + '-08-01' )
			FROM ProSolution.dbo.StudentDetail SD
			INNER JOIN ProSolution.dbo.QualsOnEntry QOE
				ON QOE.StudentID = SD.StudentID
			LEFT JOIN ProSolution.dbo.QualsOnEntryAvailableQuals QOEQ
				ON QOEQ.Code = QOE.QualCode
			LEFT JOIN ProSolution.dbo.Learning_Aim AIM
				ON AIM.LEARNING_AIM_REF = QOE.QualCode
			LEFT JOIN GradePoints ALPS
				ON ALPS.Grade = 
					CASE
						WHEN QOE.Grade LIKE '%-%' THEN LEFT ( QOE.Grade, 1 )
						ELSE QOE.Grade
					END
				AND ALPS.QualType = 'G'
			WHERE
				SD.AcademicYearID = (
					SELECT
						CFG.Value
					FROM Config CFG
					WHERE
						CFG.ConfigID = 'PMO_AcademicYearID'
				)
				AND QOE.EvidenceSeen = 1
				AND QOE.Grade IS NOT NULL

			UNION ALL

			SELECT
				StudentDetailID = SD.StudentDetailID,
				DataSource = 'COF',
				Subject = 'EngGCSE',
				AimCode = 'ENGLISH',
				AimTitle = 'GCSE in English',
				AimLevel = NULL,
				Grade = CAST ( RTRIM ( SD.GCSEEnglishQualificationGrade ) AS VARCHAR(20) ),
				GradePoints = ALPS.Points,
				DateAwarded = '20' + LEFT ( SD.AcademicYearID, 2 ) + '-08-01'
			FROM ProSolution.dbo.StudentDetail SD
			LEFT JOIN GradePoints ALPS
				ON ALPS.Grade = SD.GCSEEnglishQualificationGrade
				AND ALPS.QualType = 'G'
			WHERE
				SD.AcademicYearID = (
					SELECT
						CFG.Value
					FROM Config CFG
					WHERE
						CFG.ConfigID = 'PMO_AcademicYearID'
				)
				AND COALESCE ( SD.GCSEEnglishQualificationGrade, 'NONE' ) <> 'NONE'

			UNION ALL

			SELECT
				StudentDetailID = SD.StudentDetailID,
				DataSource = 'COF',
				Subject = 'MathsGCSE',
				AimCode = 'MATHEMATICS',
				AimTitle = 'GCSE in Mathematics',
				AimLevel = NULL,
				Grade = CAST ( RTRIM ( SD.GCSEMathsQualificationGrade ) AS VARCHAR(20) ),
				GradePoints = ALPS.Points,
				DateAwarded = '20' + LEFT ( SD.AcademicYearID, 2 ) + '-08-01'
			FROM ProSolution.dbo.StudentDetail SD
			LEFT JOIN GradePoints ALPS
				ON ALPS.Grade = SD.GCSEMathsQualificationGrade
				AND ALPS.QualType = 'G'
			WHERE
				SD.AcademicYearID = (
					SELECT
						CFG.Value
					FROM Config CFG
					WHERE
						CFG.ConfigID = 'PMO_AcademicYearID'
				)
				AND COALESCE ( SD.GCSEMathsQualificationGrade, 'NONE' ) <> 'NONE'

			UNION ALL

			SELECT
				StudentDetailID = SD.StudentDetailID,
				DataSource = 'WLC',
				Subject = 
					CASE
						WHEN AIM.LEARNING_AIM_TYPE_CODE = '0003' AND AIM.LEARNING_AIM_TITLE LIKE '%English%' THEN 'EngGCSE'
						WHEN AIM.LEARNING_AIM_TYPE_CODE = '0003' AND AIM.LEARNING_AIM_TITLE LIKE '%Math%' THEN 'MathsGCSE'
					END,
				AimCode = AIM.LEARNING_AIM_REF,
				AimTitle = AIM.LEARNING_AIM_TITLE,
				AimLevel = AIM.NOTIONAL_NVQ_LEVEL_CODE,
				Grade = RTRIM ( ENR.Grade ),
				GradePoints = ALPS.Points,
				DateAwarded = ENR.ActualEndDate
			FROM ProSolution.dbo.StudentDetail SD
			INNER JOIN ProSolution.dbo.StudentDetail SD2
				ON SD2.StudentID = SD.StudentID
				AND SD2.AcademicYearID < SD.AcademicYearID
			INNER JOIN ProSolution.dbo.Enrolment ENR
				ON ENR.StudentDetailID = SD2.StudentDetailID
			INNER JOIN ProSolution.dbo.Offering CRS
				ON CRS.OfferingID = ENR.OfferingID
			INNER JOIN ProSolution.dbo.Learning_Aim AIM
				ON AIM.LEARNING_AIM_REF = CRS.QualID
			LEFT JOIN GradePoints ALPS
				ON ALPS.Grade = 
					CASE --Double numerical grades contain a dash so take first one
						WHEN ENR.Grade IS NULL THEN
							CASE
								WHEN ENR.OutcomeID = 1 AND AIM.LEARNING_AIM_TYPE_CODE = '1439' THEN 'PA'
								WHEN ENR.OutcomeID = 3 AND AIM.LEARNING_AIM_TYPE_CODE = '1439' THEN 'FL'
								WHEN ENR.OutcomeID = 3 AND AIM.LEARNING_AIM_TYPE_CODE = '0003' THEN 'U'
							END
						WHEN ENR.Grade LIKE '%-%' THEN LEFT ( ENR.Grade, 1 )
						ELSE ENR.Grade
					END
				AND ALPS.QualType = 'G'
			WHERE
				SD.AcademicYearID = (
					SELECT
						CFG.Value
					FROM Config CFG
					WHERE
						CFG.ConfigID = 'PMO_AcademicYearID'
				)
				AND ENR.CompletionStatusID = '2'
				AND AIM.LEARNING_AIM_TYPE_CODE IN ( '0003', '1439' )
				AND ENR.OutcomeID IN ( 1, 3 )
				AND
					CASE
						WHEN AIM.LEARNING_AIM_TYPE_CODE = '0003' AND AIM.LEARNING_AIM_TITLE LIKE '%English%' THEN 'EngGCSE'
						WHEN AIM.LEARNING_AIM_TYPE_CODE = '0003' AND AIM.LEARNING_AIM_TITLE LIKE '%Math%' THEN 'MathsGCSE'
					END IS NOT NULL
		) QOE
		INNER JOIN ProSolution.dbo.StudentDetail SD
			ON SD.StudentDetailID = QOE.StudentDetailID
		WHERE
			QOE.Subject <> 'X'
	) QOE
	WHERE
		QOE.RowNum = 1
	GROUP BY
		QOE.StudentDetailID


	-- ALPS Targets from L3 Quals
	UPDATE ENR
	SET
		--***Update fields if required***
		UserDefined14 = TAR.TargetGrade,
		UserDefined15 = CAST ( CAST ( TAR.Points AS INT ) AS VARCHAR(20) )
	FROM ProSolution.dbo.StudentDetail SD
	INNER JOIN ProSolution.dbo.Enrolment ENR
		ON ENR.StudentDetailID = SD.StudentDetailID
	INNER JOIN ProSolution.dbo.Offering CRS
		ON CRS.OfferingID = ENR.OfferingID
	INNER JOIN ProSolution.dbo.Learning_Aim AIM
		ON AIM.LEARNING_AIM_REF = CRS.QualID
	INNER JOIN ALPS_AimTypeMapping ATM
		ON ATM.LearnAimRefType =
			CASE
				WHEN AIM.learning_aim_title LIKE '%Extended Diploma%' THEN '1428'
				WHEN AIM.learning_aim_title LIKE '%Extended Certificate%' THEN '1426'
				WHEN AIM.learning_aim_title LIKE '%90-credit%' THEN '90'
				WHEN AIM.learning_aim_title LIKE '%Foundation%' THEN '90'
				ELSE AIM.learning_aim_type_code
			END
	LEFT JOIN (
		SELECT
			StudentID = QOE.StudentID,
			NumGCSEs = COUNT ( QOE.StudentID ),
			TotalSize = SUM ( QOE.GradeSize ),
			AvgGCSE = CAST ( ROUND ( CAST ( SUM ( QOE.Points ) AS FLOAT ) / CAST ( SUM ( QOE.GradeSize ) AS FLOAT ), 2 ) AS DECIMAL (10, 2) )
		FROM (
			SELECT DISTINCT
				PLR.StudentID,
				PLRD.SourceQualificationCode,
				PLRD.QualificationTitle,
				PLRD.AwardDate,
				PLRD.Grade,
				GP.Points,
				GradeSize = 
					CASE
						WHEN PLRD.QualificationTitle LIKE '%Short%' THEN 0.5
						WHEN PLRD.QualificationTitle LIKE '%Double%' THEN 2.0
						WHEN PLRD.QualificationTitle LIKE '%Triple%' THEN 3.0
						WHEN LEN ( REPLACE ( PLRD.Grade, '*', '' ) ) = 2 THEN 2.0
						WHEN LEN ( REPLACE ( PLRD.Grade, '*', '' ) ) = 3 THEN 3.0
						WHEN LEN ( REPLACE ( PLRD.Grade, '*', '' ) ) = 4 THEN 4.0
						ELSE 1.0
					END,
				GradeOrder = 
					ROW_NUMBER () OVER ( 
						PARTITION BY 
							PLR.StudentID, 
							PLRD.SourceQualificationCode
						ORDER BY 
							CASE
								WHEN PLRD.Grade = 'A*' THEN 1
								ELSE 2
							END,
							PLRD.Grade 
					)
			FROM ProSolution.dbo.StudentDetail SD
			INNER JOIN ProSolution.dbo.PLRDownload PLR
				ON PLR.StudentID = SD.StudentID
			INNER JOIN ProSolution.dbo.PLRLearnerEventDownload PLRD
				ON PLRD.PLRDownloadID = PLR.PLRDownloadID
			INNER JOIN #EarliestStart EAR
				ON EAR.StudentDetailID = SD.StudentDetailID
			INNER JOIN GradePoints GP
				ON GP.Grade = PLRD.Grade
				AND GP.QualType = 'G'
			LEFT JOIN ProSolution.dbo.Learning_Aim AIM
				ON AIM.LEARNING_AIM_REF = PLRD.SourceQualificationCode
			WHERE
				SD.AcademicYearID = (
					SELECT
						CFG.Value
					FROM Config CFG
					WHERE
						CFG.ConfigID = 'ALP_AcademicYearID'
				)
				AND (
					PLRD.QualificationTitle LIKE '%GCSE%'
					OR AIM.LEARNING_AIM_TITLE LIKE '%GCSE%'
				)
				AND PLRD.AwardDate IS NOT NULL
				AND PLRD.AwardDate < EAR.EarliestStartDate
		) QOE
		WHERE
			QOE.GradeOrder = 1
			--AND QOE.StudentID = 75672
		GROUP BY
			QOE.StudentID
	) PLR
		ON PLR.StudentID = SD.StudentID
	LEFT JOIN (
		SELECT
			StudentID = QOE.StudentID,
			NumGCSEs = COUNT ( QOE.StudentID ),
			AvgGCSE = CAST ( ROUND ( CAST ( SUM ( QOE.Points ) AS FLOAT ) / CAST ( SUM ( QOE.GradeSize ) AS FLOAT ), 2 ) AS DECIMAL (10, 2) )
		FROM (
			SELECT
				StudentID = SD.StudentID,
				AimCode = QOE.QualCode,
				AimTitle = COALESCE ( AIM.LEARNING_AIM_TITLE, QOEQ.Title, QOE.Subject ),
				Grade =  QOE.Grade,
				Points = GP.Points,
				GradeSize = 
					CASE
						WHEN COALESCE ( AIM.LEARNING_AIM_TITLE, QOEQ.Title, QOE.Subject ) LIKE '%Short%' THEN 0.5
						WHEN COALESCE ( AIM.LEARNING_AIM_TITLE, QOEQ.Title, QOE.Subject ) LIKE '%Double%' THEN 2.0
						WHEN COALESCE ( AIM.LEARNING_AIM_TITLE, QOEQ.Title, QOE.Subject ) LIKE '%Triple%' THEN 3.0
						WHEN LEN ( REPLACE ( QOE.Grade, '*', '' ) ) = 2 THEN 2.0
						WHEN LEN ( REPLACE ( QOE.Grade, '*', '' ) ) = 3 THEN 3.0
						WHEN LEN ( REPLACE ( QOE.Grade, '*', '' ) ) = 4 THEN 4.0
						ELSE 1.0
					END,
				GradeOrder = 
					ROW_NUMBER () OVER ( 
						PARTITION BY 
							SD.StudentID, 
							QOE.QualCode
						ORDER BY 
							CASE
								WHEN QOE.Grade = 'A*' THEN 1
								ELSE 2
							END,
							QOE.Grade 
					)
			FROM ProSolution.dbo.StudentDetail SD
			INNER JOIN ProSolution.dbo.QualsOnEntry QOE
				ON QOE.StudentID = SD.StudentID
			INNER JOIN #EarliestStart EAR
				ON EAR.StudentDetailID = SD.StudentDetailID
			LEFT JOIN ProSolution.dbo.QualsOnEntryAvailableQuals QOEQ
				ON QOEQ.Code = QOE.QualCode
			INNER JOIN GradePoints GP
				ON GP.Grade = QOE.Grade
				AND GP.QualType = 'G'
			LEFT JOIN ProSolution.dbo.Learning_Aim AIM
				ON AIM.LEARNING_AIM_REF = QOE.QualCode
			WHERE
				SD.AcademicYearID = (
					SELECT
						CFG.Value
					FROM Config CFG
					WHERE
						CFG.ConfigID = 'ALP_AcademicYearID'
				)
				AND QOE.EvidenceSeen = 1
				AND COALESCE ( AIM.LEARNING_AIM_TITLE, QOEQ.Title, QOE.Subject ) LIKE '%GCSE%'
				AND COALESCE ( QOE.DateAwarded, EAR.EarliestStartDate ) <= EAR.EarliestStartDate
				AND QOE.Grade IS NOT NULL
		) QOE
		WHERE
			QOE.GradeOrder = 1
			--AND QOE.StudentID = 75672
		GROUP BY
			QOE.StudentID
	) QOE
		ON QOE.StudentID = SD.StudentID
	LEFT JOIN ALPS_TargetSetting TAR
		ON TAR.Subject = COALESCE ( ATM.Subject, 'Sub Dip/Ext Cert' )
		AND COALESCE ( PLR.AvgGCSE, QOE.AvgGCSE ) BETWEEN TAR.MinPoints AND TAR.MaxPoints
	LEFT JOIN (
		SELECT
			RNK1.Subject,
			RNK1.TargetGrade,
			RNK1.GradeRank,
			MaxRank = MAX ( RNK2.GradeRank ),
			TargetPercent = ROUND ( ( 100.00 / CAST ( MAX ( RNK2.GradeRank ) AS FLOAT ) ) * RNK1.GradeRank, 0 )
		FROM #Rankings RNK1
		INNER JOIN #Rankings RNK2
			ON RNK2.Subject = RNK1.Subject
		GROUP BY
			RNK1.Subject,
			RNK1.TargetGrade,
			RNK1.GradeRank
	) PER
		ON PER.Subject = TAR.Subject
		AND PER.TargetGrade = TAR.TargetGrade
	WHERE
		SD.AcademicYearID = (
			SELECT
				CFG.Value
			FROM Config CFG
			WHERE
				CFG.ConfigID = 'ALP_AcademicYearID'
		)
		AND CRS.OfferingStatusID IN ( '1', '3' ) --Live and pending only
		AND AIM.NOTIONAL_NVQ_LEVEL_CODE = '3'
		AND (
			--***Update fields if required***
			COALESCE ( ENR.UserDefined14, '' ) <> COALESCE ( TAR.TargetGrade, '' )
			OR COALESCE ( ENR.UserDefined15, '' ) <> COALESCE ( CAST ( CAST ( TAR.Points AS INT ) AS VARCHAR(20) ), '' )
		)
	

	--Other L2 Pass/Fail Provision (Exc. GCSE and Functional Skills Maths and English)
	UPDATE ENR
	SET
		ENR.UserDefined14 = GTA.Value,
		ENR.UserDefined15 = '100.00'
	FROM ProSolution.dbo.StudentDetail SD
	INNER JOIN ProSolution.dbo.Enrolment ENR
		ON ENR.StudentDetailID = SD.StudentDetailID
	INNER JOIN ProSolution.dbo.Offering CRS
		ON CRS.OfferingID = ENR.OfferingID
	INNER JOIN ProSolution.dbo.Learning_Aim AIM
		ON AIM.LEARNING_AIM_REF = CRS.QualID
	INNER JOIN Config GTA
		ON GTA.ConfigID = 'PMO_SetTargetsL2PassFailGrade'
	LEFT JOIN (
		--Exclude L2 courses with any merit or distinction marks in the system
		SELECT DISTINCT 
			CRS.QualID
		FROM ProSolution.dbo.StudentDetail SD
		INNER JOIN ProSolution.dbo.Enrolment ENR
			ON ENR.StudentDetailID = SD.StudentDetailID
		INNER JOIN ProSolution.dbo.Offering CRS
			ON CRS.OfferingID = ENR.OfferingID
		INNER JOIN ProSolution.dbo.Learning_Aim AIM
			ON AIM.LEARNING_AIM_REF = CRS.QualID
		WHERE
			AIM.NVQLevelID_v2 = '2'
			AND ENR.Grade IN ( 'D', 'DS', 'M', 'ME' )
	) NPF1
		ON NPF1.QualID = CRS.QualID
	LEFT JOIN (
		--Exclude L2 courses with any merit or distinction marks in the system
		SELECT DISTINCT 
			CRS.QualID
		FROM ProSolution.dbo.StudentDetail SD
		INNER JOIN ProSolution.dbo.Enrolment ENR
			ON ENR.StudentDetailID = SD.StudentDetailID
		INNER JOIN ProSolution.dbo.Offering CRS
			ON CRS.OfferingID = ENR.OfferingID
		INNER JOIN ProSolution.dbo.Learning_Aim AIM
			ON AIM.LEARNING_AIM_REF = CRS.QualID
		WHERE
			AIM.NVQLevelID_v2 = '2'
			AND ENR.Grade IN ( 'A', 'B', 'C', 'D', 'E', 'F', 'G' )
	) NPF2
		ON NPF2.QualID = CRS.QualID
	WHERE
		SD.AcademicYearID = (
			SELECT
				CFG.Value
			FROM Config CFG
			WHERE
				CFG.ConfigID = 'ALP_AcademicYearID'
		)
		AND ENR.CompletionStatusID IN ( '1', '2', '3' )
		AND AIM.NVQLevelID_v2 = '2'
		AND NPF1.QualID IS NULL
		AND NPF2.QualID IS NULL
		AND NOT (
			( --Eng or Maths
				COALESCE ( AIM.LEARNING_AIM_TYPE_CODE, '0000' ) IN (
					'0003',--GCSE
					'1439'--Func Skills
				)
				AND (
					COALESCE ( AIM.LEARNING_AIM_TITLE, 'X' ) LIKE '%English%'
					OR COALESCE ( AIM.LEARNING_AIM_TITLE, 'X' ) LIKE '%Math%'
				)
			)
			OR ( --ESOL
				COALESCE ( AIM.LEARNING_AIM_TITLE, 'X' ) LIKE '%ESOL%'
				OR COALESCE ( AIM.LEARNING_AIM_TITLE, 'X' ) LIKE '%Foundations for Learning and Life'
				OR COALESCE ( AIM.LEARNING_AIM_TITLE, 'X' ) LIKE '%Preparation for Work,%'
			)
		)
		AND COALESCE ( GTA.Value, '' ) <> ''
		AND COALESCE ( ENR.UserDefined14, '' ) <> COALESCE ( GTA.Value, '' )

	
	--Other L2 Pass/Merit/Distinction Provision (Exc. GCSE and Functional Skills Maths and English)
	UPDATE ENR
	SET
		ENR.UserDefined14 = GTA.Value,
		ENR.UserDefined15 = '100.00'
	FROM ProSolution.dbo.StudentDetail SD
	INNER JOIN ProSolution.dbo.Enrolment ENR
		ON ENR.StudentDetailID = SD.StudentDetailID
	INNER JOIN ProSolution.dbo.Offering CRS
		ON CRS.OfferingID = ENR.OfferingID
	INNER JOIN ProSolution.dbo.Learning_Aim AIM
		ON AIM.LEARNING_AIM_REF = CRS.QualID
	INNER JOIN Config GTA
		ON GTA.ConfigID = 'PMO_SetTargetsL2PMDGrade'
	LEFT JOIN (
		--Exclude L2 courses with any merit or distinction marks in the system
		SELECT DISTINCT 
			CRS.QualID
		FROM ProSolution.dbo.StudentDetail SD
		INNER JOIN ProSolution.dbo.Enrolment ENR
			ON ENR.StudentDetailID = SD.StudentDetailID
		INNER JOIN ProSolution.dbo.Offering CRS
			ON CRS.OfferingID = ENR.OfferingID
		INNER JOIN ProSolution.dbo.Learning_Aim AIM
			ON AIM.LEARNING_AIM_REF = CRS.QualID
		WHERE
			AIM.NVQLevelID_v2 = '2'
			AND ENR.Grade IN ( 'D', 'DS', 'M', 'ME' )
	) NPF1
		ON NPF1.QualID = CRS.QualID
	LEFT JOIN (
		--Exclude L2 courses with any merit or distinction marks in the system
		SELECT DISTINCT 
			CRS.QualID
		FROM ProSolution.dbo.StudentDetail SD
		INNER JOIN ProSolution.dbo.Enrolment ENR
			ON ENR.StudentDetailID = SD.StudentDetailID
		INNER JOIN ProSolution.dbo.Offering CRS
			ON CRS.OfferingID = ENR.OfferingID
		INNER JOIN ProSolution.dbo.Learning_Aim AIM
			ON AIM.LEARNING_AIM_REF = CRS.QualID
		WHERE
			AIM.NVQLevelID_v2 = '2'
			AND ENR.Grade IN ( 'A', 'B', 'C', 'D', 'E', 'F', 'G' )
	) NPF2
		ON NPF2.QualID = CRS.QualID
	WHERE
		SD.AcademicYearID = (
			SELECT
				CFG.Value
			FROM Config CFG
			WHERE
				CFG.ConfigID = 'ALP_AcademicYearID'
		)
		AND ENR.CompletionStatusID IN ( '1', '2', '3' )
		AND AIM.NVQLevelID_v2 = '2'
		AND NPF1.QualID IS NOT NULL
		AND NPF2.QualID IS NULL
		AND NOT (
			( --Eng or Maths
				COALESCE ( AIM.LEARNING_AIM_TYPE_CODE, '0000' ) IN (
					'0003',--GCSE
					'1439'--Func Skills
				)
				AND (
					COALESCE ( AIM.LEARNING_AIM_TITLE, 'X' ) LIKE '%English%'
					OR COALESCE ( AIM.LEARNING_AIM_TITLE, 'X' ) LIKE '%Math%'
				)
			)
			OR ( --ESOL
				COALESCE ( AIM.LEARNING_AIM_TITLE, 'X' ) LIKE '%ESOL%'
				OR COALESCE ( AIM.LEARNING_AIM_TITLE, 'X' ) LIKE '%Foundations for Learning and Life'
				OR COALESCE ( AIM.LEARNING_AIM_TITLE, 'X' ) LIKE '%Preparation for Work,%'
			)
		)
		AND COALESCE ( GTA.Value, '' ) <> ''
		AND COALESCE ( ENR.UserDefined14, '' ) <> COALESCE ( GTA.Value, '' )


	--GCSE Maths and English
	UPDATE ENR
	SET
		ENR.UserDefined14 = 
			COALESCE (
				CASE
					WHEN AIM.LEARNING_AIM_TITLE LIKE '%Math%' THEN MAT.Grade
					ELSE ENG.Grade
				END,
				'4'
			),
		ENR.UserDefined15 = 
			CAST (
				COALESCE (
					CASE
						WHEN AIM.LEARNING_AIM_TITLE LIKE '%Math%' THEN MAT.Points
						ELSE ENG.Points
					END,
					4.00
				)
				AS VARCHAR(50) )
	FROM ProSolution.dbo.StudentDetail SD
	INNER JOIN ProSolution.dbo.Enrolment ENR
		ON ENR.StudentDetailID = SD.StudentDetailID
	INNER JOIN ProSolution.dbo.Offering CRS
		ON CRS.OfferingID = ENR.OfferingID
	INNER JOIN ProSolution.dbo.Learning_Aim AIM
		ON AIM.LEARNING_AIM_REF = CRS.QualID
	LEFT JOIN #QOEs QOE
		ON QOE.StudentDetailID = ENR.StudentDetailID
	LEFT JOIN Config CLV
		ON CLV.ConfigID = 'PMO_GCSEGradeImprovementMin'
	LEFT JOIN Config CLT
		ON CLV.ConfigID = 'PMO_GCSEGradeImprovementTrigger'
	LEFT JOIN Config CIT
		ON CIT.ConfigID = 'PMO_GCSEGradeImprovementTarget'
	LEFT JOIN GradePoints MAT
		ON MAT.Points = 
			CASE
				WHEN COALESCE ( CLV.Value, 0 ) > 0 AND COALESCE ( CLT.Value, 0 ) > 0 AND CEILING ( QOE.MathsGCSEPoints ) < CLT.Value THEN CLV.Value
				WHEN CEILING ( QOE.MathsGCSEPoints ) + COALESCE ( CIT.Value, 1 ) > 9 THEN 9 --Ensure value does not go above 9
				ELSE CEILING ( QOE.MathsGCSEPoints ) + COALESCE ( CIT.Value, 1 )
			END
		AND MAT.QualType = 'G'
		AND MAT.Grade BETWEEN '1' AND '9'
	LEFT JOIN GradePoints ENG
		ON ENG.Points = 
			CASE
				WHEN COALESCE ( CLV.Value, 0 ) > 0 AND COALESCE ( CLT.Value, 0 ) > 0 AND CEILING ( QOE.EngGCSEPoints ) < CLT.Value THEN CLV.Value
				WHEN CEILING ( QOE.EngGCSEPoints ) + COALESCE ( CIT.Value, 1 ) > 9 THEN 9 --Ensure value does not go above 9
				ELSE CEILING ( QOE.EngGCSEPoints ) + COALESCE ( CIT.Value, 1 )
			END
		AND ENG.QualType = 'G'
		AND ENG.Grade BETWEEN '1' AND '9'
	LEFT JOIN (
		SELECT
			RNK1.Grade,
			RNK1.GradeRank,
			MaxRank = MAX ( RNK2.GradeRank ),
			TargetPercent = ROUND ( ( 100.00 / CAST ( MAX ( RNK2.GradeRank ) AS FLOAT ) ) * RNK1.GradeRank, 0 )
		FROM #RankingsGCSE RNK1
		INNER JOIN #RankingsGCSE RNK2
			ON 1 = 1
		GROUP BY
			RNK1.Grade,
			RNK1.GradeRank
	) PERMAT
		ON PERMAT.Grade = MAT.Grade
	LEFT JOIN (
		SELECT
			RNK1.Grade,
			RNK1.GradeRank,
			MaxRank = MAX ( RNK2.GradeRank ),
			TargetPercent = ROUND ( ( 100.00 / CAST ( MAX ( RNK2.GradeRank ) AS FLOAT ) ) * RNK1.GradeRank, 0 )
		FROM #RankingsGCSE RNK1
		INNER JOIN #RankingsGCSE RNK2
			ON 1 = 1
		GROUP BY
			RNK1.Grade,
			RNK1.GradeRank
	) PERENG
		ON PERENG.Grade = ENG.Grade
	WHERE
		SD.AcademicYearID = (
			SELECT
				CFG.Value
			FROM Config CFG
			WHERE
				CFG.ConfigID = 'ALP_AcademicYearID'
		)
		AND ENR.CompletionStatusID IN ( '1', '2', '3' )
		AND AIM.LEARNING_AIM_TYPE_CODE = '0003'
		AND (
			AIM.LEARNING_AIM_TITLE LIKE '%Math%'
			OR AIM.LEARNING_AIM_TITLE LIKE '%English%'
		)
		AND (
			COALESCE ( SD.UserDefined14, '' ) <>
			COALESCE (
				CASE
					WHEN AIM.LEARNING_AIM_TITLE LIKE '%Math%' THEN MAT.Grade
					ELSE ENG.Grade
				END,
				'4'
			)
			OR COALESCE ( SD.UserDefined15, '' ) <> 
				CAST (
					COALESCE (
						CASE
							WHEN AIM.LEARNING_AIM_TITLE LIKE '%Math%' THEN MAT.Points
							ELSE ENG.Points
						END,
						4.00
					)
					AS VARCHAR(50) )
		)

END